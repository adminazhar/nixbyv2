import { useRouter } from "next/router";
import Head from "next/head";
import { Header } from "../../components/layouts/header";
import { FooterMain } from "../../components/layouts/footer";
import { Card, Table } from "flowbite-react";
import Error from 'next/error'
import Link from 'next/link'

function Mobile({ errorCode, MobileSpec }) {
  if (errorCode) {
    return <Error statusCode={errorCode} />
  }
  const router = useRouter();
  const { id } = router.query;

  interface MobileData {
    // General
    'Launch Date': string;
    'Operating System': string;
    'Custom UI': string;

    // Performance
    'Chipset': string;
    'CPU': string;
    'Architecture': string;
    'Fabrication': string;
    'Graphics': string;
    'RAM': string;
    'RAM Type': string;

    // Display
    'Display Type': string;
    'Screen Size': string;
    'Resolution': string;
    'Aspect Ratio': string;
    'Pixel Density': string;
    'Screen to Body Ratio (calculated)': string;
    'Bezel-less display': string;
    'Touch Screen': string;
    'Brightness': string;
    'HDR 10 / HDR+ support': string;
    'Refresh Rate': string;
  }

  const MobileData = {
    "General" : {
      "Launch Date" : MobileSpec?.['released-hl'],
      "Launch XYZ" : MobileSpec?.['asdasdasdasd-hl'] || null,
      'Operating System': MobileSpec?.['os-hl']?.split(',')[0]?.trim() || null,
      'Custom UI': MobileSpec?.['os-hl']?.split(',')[1]?.trim(),
    },
    "Display" : {
      "Display Type" : MobileSpec?.displaytype
    }
  }

  console.log(MobileSpec.adasdasdasd);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen w-full flex-col ">
        <Header></Header>
        <main className="container mx-auto flex flex-wrap py-6 px-3">
          {/* <section className="w-full md:w-2/3 flex flex-col px-3 bg-white border border-gray-200 rounded-lg shadow-md "> */}
          <section className="w-full md:w-2/3 flex flex-col px-3 bg-white  ">
            <p className="text-black text-1xl md:text-2xl">
                
                
                {MobileSpec?.modelname || null} 
                
                </p>
            {/* <pre>{JSON.stringify(data, null, 2) }</pre> */}
            <hr className="my-2 h-px bg-gray-200 border-0 dark:bg-gray-700"></hr>
            <p className="text-sky-400 pb-20">{id}</p>
            <div className="flex flex-wrap">
                <div className="flex text-5xl px-4 py-2">
                    Key Specs
                </div>
                <div className="flex">
                
                <ul>
                  {MobileData.General.map((name) => (
                    <li key={name}>a - {name}</li>
                  ))}
                </ul>

                <Table striped={true}>
                    <Table.Body className="divide-y">


                    {Object.keys(MobileData.General).map((key) => (
                        <Table.Row className="bg-white dark:border-gray-700 dark:bg-gray-800" key={key}>
                            <Table.Cell className="whitespace-nowrap font-medium text-gray-900 dark:text-white">{key}</Table.Cell>
                            <Table.Cell>{MobileData.General[key]}</Table.Cell>
                        </Table.Row>
                    ))}
                    
                    </Table.Body>
                </Table>

                <Table striped={true}>
                    <Table.Body className="divide-y">


                    {Object.keys(MobileData.Display).map((key) => (
                        <Table.Row className="bg-white dark:border-gray-700 dark:bg-gray-800" key={key}>
                            <Table.Cell className="whitespace-nowrap font-medium text-gray-900 dark:text-white">{key}</Table.Cell>
                            <Table.Cell>{MobileData.Display[key]}</Table.Cell>
                        </Table.Row>
                    ))}
                    
                    </Table.Body>
                </Table>

                
                </div>
            </div>
          </section>
          <aside className="w-full md:w-1/3 flex flex-col px-3">
            <Card>
              <h5 className="mb-2 text-3xl font-bold text-gray-900 dark:text-white">
                Work fast from anywhere
              </h5>
              <p className="mb-5 text-base text-gray-500 dark:text-gray-400 sm:text-lg">
                Stay up to date and move work forward with Flowbite on iOS &
                Android. Download the app today.
              </p>
            </Card>

            <Card className="mt-4">
              <h5 className="mb-2 text-3xl font-bold text-gray-900 dark:text-white">
                Work fast from anywhere
              </h5>
              <p className="mb-5 text-base text-gray-500 dark:text-gray-400 sm:text-lg">
                Stay up to date and move work forward with Flowbite on iOS &
                Android. Download the app today.
              </p>
              <p>
              <Link href="samsung galaxy s20">Samsung Galaxy S20</Link>
              </p>
              
              <p>
              <Link href="apple iphone 13 pro max">Apple iPhone 13 Pro Max</Link>
              </p>
              
              <p>
              <Link href="samsung galaxy s22">Samsung Galaxy S22</Link>
              </p>
            </Card>
          </aside>
        </main>
        <FooterMain></FooterMain>
      </div>
    </>
  );
}

// This gets called on every request
export async function getServerSideProps(context) {
    const id = context.params.id // Get ID from slug `/mobile/samsung galaxy`
    
    const res = await fetch('https://admin.nixby.in/MobileMaster/MobileFetch.php?fetchmobile=' + encodeURIComponent(id.trim()))
    const MobileSpec = await res.json()
    const errorCode = res.ok ? false : res.status
    // if (!MobileSpec) {
    //   return {
    //     notFound: true,
    //   }
    // }

    // Pass data to the page via props
    console.log(errorCode);
    return { props: { errorCode, MobileSpec } };
}

export default Mobile;

